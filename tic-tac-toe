game.h:

#pragma once
#include <stdio.h>
#define COL  3
#define ROW  3

void game(char board[COL][ROW]);
void reboard(char board[COL][ROW]);
void allboard(char board[COL][ROW]);
void player1(char board[COL][ROW]);
void player2(char board[COL][ROW]);
int iswin(char board[COL][ROW]);
int judge(char board[COL][ROW]);

game.c:

#define _CRT_SECURE_NO_WARNINGS
#include "game.h"

void reboard(char board[COL][ROW])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < COL; i++)
	{
		j = 0;
		for (j = 0; j < ROW; j++)
		{
			board[i][j] = ' ';
		}
	}
}

void allboard(char board [COL][ROW])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < COL; i++)
	{
		j = 0;
		for (j = 0; j < ROW; j++)
		{
			printf(" %c ",board[i][j]);
			if (j < ROW - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if (i < COL - 1)
		{
			for (j = 0; j < ROW; j++)
			{
				printf("---");
				if (j < ROW - 1)
				{
					printf("|");
				}
			}
		}
		printf("\n");
	}
}

void game(char board[COL][ROW])
{
	reboard(board);
	allboard(board);
	while (1)
	{
		player1(board);
		allboard(board);
		if (iswin(board))
		{
			break;
		}
		player2(board);
		allboard(board);
		if (iswin(board))
		{
			break;
		}
	}
}

void player1(char board[COL][ROW])
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("玩家1回合,请下棋:");
		scanf("%d  %d", &x, &y);
		if (board[x - 1][y - 1] != ' ')
		{
			printf("该坐标已被占用，请重新输入！\n");
			continue;
		}
		if (x < 4 && x>0 && y > 0 && y < 4)
		{
			board[x - 1][y - 1] = 'O';
			break;
		}
		else
		{
			printf("输入错误坐标，请重新输入！\n");
		}
	}
}

void player2(char board[COL][ROW])
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("玩家2回合,请下棋:");
		scanf("%d  %d", &x, &y);
		if (board[x - 1][y - 1] != ' ')
		{
			printf("该坐标已被占用，请重新输入！\n");
			continue;
		}
		if (x < 4 && x>0 && y > 0 && y < 4)
		{
			board[x - 1][y - 1] = 'X';
			break;
		}
		else
		{
			printf("输入错误坐标，请重新输入！\n");
		}
	}
}

int iswin(char board[COL][ROW])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < COL; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][1] != ' ')
		{
			if (board[i][0] == 'O')
			{
				printf("玩家1胜利！\n");
				return 1;
			}
			if (board[i][0] == 'X')
			{
				printf("玩家2胜利！\n");
				return 1;
			}
		}
	}
	for (j = 0; j < ROW; j++)
	{
		if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[1][j] != ' ')
		{
			if (board[0][j] == 'O')
			{
				printf("玩家1胜利！\n");
				return 1;
			}
			if (board[0][j] == 'X')
			{
				printf("玩家2胜利！\n");
				return 1;
			}
		}
	}
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ')
	{
		if (board[0][0] == 'O')
		{
			printf("玩家1胜利！\n");
			return 1;
		}
		if (board[0][0] == 'X')
		{
			printf("玩家2胜利！\n");
			return 1;
		}
	}
	if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[1][1] != ' ')
	{
		if (board[1][1] == 'O')
		{
			printf("玩家1胜利！\n");
			return 1;
		}
		if (board[1][1] == 'X')
		{
			printf("玩家2胜利！\n");
			return 1;
		}
	}
	if (judge(board))
	{
		printf("游戏平局！\n");
		return 1;
	}
	return 0;
}

int judge(char board[COL][ROW])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < COL; i++)
	{
		for (j = 0; j < ROW; j++)
		{
			if (board[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}

test.c:

#define _CRT_SECURE_NO_WARNINGS
#include "game.h"

menu()
{
	printf("*******************************\n");
	printf("****** 1. play    0.exit ******\n");
	printf("*******************************\n");
	printf("请选择:");
}

int main()
{
	int choose = 0;
	char board[COL][ROW] = { '0'};

	do
	{
		menu();
        scanf("%d", &choose);
		switch (choose)
		{
		case 1:
			game(board);
			break;
		case 0:
			printf("退出游戏！\n");
			break;
		default:
			printf("错误，请选择正确数字！\n");
			break;
		}
	}while (choose);
	return 0;
}
